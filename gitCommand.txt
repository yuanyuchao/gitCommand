ls -al ~/.ssh 检查ssh公钥是否存在
ssh-keygen -t rsa -C "499908562@qq.com" 生成ssh  路径：用户/.ssh目录下
去github上添加这个公钥 记事本打开pub后缀的文件
 ssh -T git@github.com 连接github账户  yes然后会提示绑定成功


git config -l查看全局配置 检查是否建立连接


git init 初始化仓库
git add . 添加所有文件
git status  查看工作区状态 增加修改删除 都会有提示
git commit -m '本次提交的说明'  提交修改

git branch 查看当前分支
git branch -a 查看分支列表
git checkout 分支名字 切换到某分支
git checkout -b 分支名字 创建一个分支并切换到新创建的分支
git branch -d 分支名字 删除本地分支
git push origin --delete 分支名字 删除远程分支

git remote add origin git@github.com:yuanyuchao/retest.git 本地与git上新建的仓库建立连接
origin 是一个变量 代表仓库的地址 可以自定义
以下操作origin代表的就是仓库的地址

git pull 把仓库的代码拉下来到本地

git push -u origin master 推送到git仓库 -u的是以数据流的方式
再次提交可以直接用git push

git diff fileName 查看某个文件具体修改了什么内容
git log --pretty=oneline 查看提交（commit）历史
git reset --hard HEAD^ 在Git中，用HEAD表示当前版本，上一个版本就是HEAD^，
上上一个版本就是HEAD^^，以此类推，如果需要回退几十个版本，
写几十个^容易数不过来，所以可以写，例如回退30个版本为：HEAD~30。

git checkout -- <file> 适用于工作区修改没有add的文件

git push -f origin master 将回退后的版本强制推送到远程仓库。本地强制上传到远程，把远程的覆盖(使用git push命令会推送失败）
提示! [rejected]        master -> master (non-fast-forward)
error: failed to push some refs to 'git@github.com:yuanyuchao/retest.git'


在使用git commit命令将修改从暂存区提交到本地版本库后，
只剩下最后一步将本地版本库的分支推送到远程服务器上对应的分支了，
如果不清楚版本库的构成，可以查看我的另一篇，git 仓库的基本结构。
git push的一般形式为 git push <远程主机名> <本地分支名>  <远程分支名> ，
例如 git push origin master：refs/for/master ，
即是将本地的master分支推送到远程主机origin上的对应master分支， origin 是远程主机名，
第一个master是本地分支名，第二个master是远程分支名。